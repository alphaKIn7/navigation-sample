<resources>
    <string name="app_name">NavigationSample</string>
    <string name="let_s_navigate">Let\'s Navigate!</string>
    <string name="label_first_fragment">This is FirstFragment. You can see a simple basic usage of Navigation between
        IntroFragment and FirstFragment
    </string>
    <string name="fragment_first_exercise">Now Let\'s try to pass an argument. Type something and we will pass it to the
        next screen
    </string>
    <string name="type_something_here">Type something here..</string>
    <string name="next">Next</string>
    <string name="fragment_second_label">This is SecondFragment. Here we are receiving an argument from FirstFragment,
        so you can see an example of Navigation with arguments, using SafeArgs
    </string>
    <string name="argument">Argument :</string>
    <string name="second_fragment_exercise">
        Ok now let\'s see an animation, Shared Element Transition between this image and the next screen. Click on Next and
        see what happen
    </string>
    <string name="lorem_ipsum">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur</string>
    <string name="fragment_third_label">It\'s nice, isn\'t it? Now let\'s see other simple animations, enterAnim and
        exitAnim
    </string>
    <string name="fragment_fourth_label">FourthFragment. We have defined a normal action but this time with some
        animations. If you check in the navigation graph, and you select the action from ThirdFragment to
        FourthFragment, you will see this :
    </string>
    <string name="fragment_fourt_popto_inclusive">The last thing that we want to see is the PopTo operantion. We have two
        different ways, popTo Inclusive and popToEsclusive. Let\'s say that we want popTo Inclusive to IntroFragment, it
        means that it pops off everything on the back stack, including the referenced fragment transaction
    </string>
    <string name="inclusive">INCLUSIVE</string>
</resources>
